{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nconst signUpValidation = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().min(8, 'Passwords needs to be longer than 8 characters').matches(/[a-z]/, 'Password needs at least 1 lowercase character.').matches(/[A-Z]/, 'Password needs at least 1 uppercase character.').matches(/[1-9]/, 'Password needs at least a number.'),\n  confirmPassword: yup.string().required(),\n  firstName: yup.string().max(50, 'Too Long!').required('Required'),\n  lastName: yup.string().max(50, 'Too Long!').required('Required'),\n  email: yup.string().email('Invalid email').required('Required')\n});\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      middleName: '',\n      suffix: '',\n      email: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    const startDate = new Date();\n    let {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialStates: {\n        username,\n        password\n      } //validationSchema={signUpValidation}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, props => {\n      const {\n        errors,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, \"Submit\"));\n    });\n  }\n\n  onSubmit(values) {\n    alert(\"Test\");\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/SignUpPage.jsx"],"names":["React","Component","Form","Col","Row","Button","ReactDatePicker","yup","Formik","signUpValidation","object","shape","username","string","required","password","min","matches","confirmPassword","firstName","max","lastName","email","SignUpPage","constructor","props","state","middleName","suffix","onSubmit","bind","render","startDate","Date","errors","handleSubmit","values","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,OAAO,4CAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,QAAQ,EAAEL,GAAG,CAACM,MAAJ,GACLC,QADK,CACI,sBADJ,CAD8B;AAGxCC,EAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GACLG,GADK,CACD,CADC,EACE,gDADF,EAELC,OAFK,CAEG,OAFH,EAEY,gDAFZ,EAGLA,OAHK,CAGG,OAHH,EAGY,gDAHZ,EAILA,OAJK,CAIG,OAJH,EAIY,mCAJZ,CAH8B;AAQxCC,EAAAA,eAAe,EAAEX,GAAG,CAACM,MAAJ,GACZC,QADY,EARuB;AAUxCK,EAAAA,SAAS,EAAEZ,GAAG,CAACM,MAAJ,GACRO,GADQ,CACJ,EADI,EACA,WADA,EAERN,QAFQ,CAEC,UAFD,CAV6B;AAaxCO,EAAAA,QAAQ,EAAEd,GAAG,CAACM,MAAJ,GACPO,GADO,CACH,EADG,EACC,WADD,EAEPN,QAFO,CAEE,UAFF,CAb8B;AAgBxCQ,EAAAA,KAAK,EAAEf,GAAG,CAACM,MAAJ,GACJS,KADI,CACE,eADF,EAEJR,QAFI,CAEK,UAFL;AAhBiC,CAAnB,CAAzB;;AAqBA,MAAMS,UAAN,SAAyBtB,SAAzB,CAAmC;AAC/BuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTd,MAAAA,QAAQ,EAAE,EADD;AAETG,MAAAA,QAAQ,EAAE,EAFD;AAGTG,MAAAA,eAAe,EAAE,EAHR;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTE,MAAAA,QAAQ,EAAE,EALD;AAMTM,MAAAA,UAAU,EAAE,EANH;AAOTC,MAAAA,MAAM,EAAE,EAPC;AAQTN,MAAAA,KAAK,EAAE;AARE,KAAb;AAUA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAI;AAACrB,MAAAA,QAAD;AAAUG,MAAAA;AAAV,QAAsB,KAAKW,KAA/B;AACA,wBACI,oBAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAACd,QAAAA,QAAD;AAAUG,QAAAA;AAAV,OADnB,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKSU,KAAD,IACA;AACI,YAAM;AACNS,QAAAA,MADM;AAENC,QAAAA;AAFM,UAGFV,KAHJ;AAIA,0BACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEU,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH,KAhBT,CADJ;AAqBH;;AAEDN,EAAAA,QAAQ,CAACO,MAAD,EAAS;AACbC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACH;;AA5C8B;;AA+CnC,eAAed,UAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactDatePicker from 'react-datepicker'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required'),\r\n    password: yup.string()\r\n        .min(8, 'Passwords needs to be longer than 8 characters')\r\n        .matches(/[a-z]/, 'Password needs at least 1 lowercase character.')\r\n        .matches(/[A-Z]/, 'Password needs at least 1 uppercase character.')\r\n        .matches(/[1-9]/, 'Password needs at least a number.'),\r\n    confirmPassword: yup.string()\r\n        .required(),\r\n    firstName: yup.string()\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n    lastName: yup.string()\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n    email: yup.string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n  });\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            suffix: '',\r\n            email: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const startDate = new Date();\r\n        let {username,password} = this.state\r\n        return (\r\n            <Formik\r\n                initialStates={{username,password}}\r\n                //validationSchema={signUpValidation}\r\n            >\r\n                {\r\n                    (props) => \r\n                    {\r\n                        const {\r\n                        errors,\r\n                        handleSubmit\r\n                        } = props;\r\n                        return (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        alert(\"Test\")\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}