{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\LogInComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport AccountService from '../../ApiServices/AccountService';\nimport ApiUtil from '../../ApiServices/ApiUtil';\nimport Utility from '../../Utility/Utility'; //import GoogleBtn from '../Buttons/GoogleButton'\n\nconst logInValidation = yup.object().shape({\n  email: yup.string().email('Invalid email').required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\")\n});\n\nclass LogInComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.logIn = this.logIn.bind(this);\n    this.changeRememberSignInCheck = this.changeRememberSignInCheck.bind(this);\n  }\n\n  render() {\n    let {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container logInPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email,\n        password\n      },\n      onSubmit: this.logIn,\n      validationSchema: logInValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        errors,\n        touched\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, \"Log In to Birthday Calendar\"), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"rememberSignInChk\",\n        onChange: this.changeRememberSignInCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"rememberSignInChk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, \"\\xA0Remember me on this device\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn-success\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, \"Log In\"), this.state.serverErrorMessage ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 69\n        }\n      }, this.state.serverErrorMessage) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 145\n        }\n      }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 71\n        }\n      }, errors.email) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 130\n        }\n      }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 77\n        }\n      }, errors.password) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 139\n        }\n      })));\n    }));\n  }\n\n  logIn(logInCredentials) {\n    this.setState({\n      serverErrorMessage: null\n    });\n    AccountService.logIn(logInCredentials).then(response => {\n      ApiUtil.setupRequestInterceptor(response.data.token);\n      this.props.history.push('/home');\n    }).catch(error => {\n      Utility.defaultApiErrorHandling(error, this);\n    });\n  }\n\n  changeRememberSignInCheck(event) {\n    console.log(event.target);\n    this.setState({\n      willRememberSignIn: event.target.checked\n    });\n  }\n\n}\n\nexport default LogInComponent;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/LogInComponent.jsx"],"names":["React","Component","Formik","Form","Field","yup","AccountService","ApiUtil","Utility","logInValidation","object","shape","email","string","required","password","LogInComponent","constructor","props","state","logIn","bind","changeRememberSignInCheck","render","errors","touched","serverErrorMessage","logInCredentials","setState","then","response","setupRequestInterceptor","data","token","history","push","catch","error","defaultApiErrorHandling","event","console","log","target","willRememberSignIn","checked"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as yup from 'yup'\r\nimport AccountService from '../../ApiServices/AccountService'\r\nimport ApiUtil from '../../ApiServices/ApiUtil'\r\nimport Utility from '../../Utility/Utility'\r\n//import GoogleBtn from '../Buttons/GoogleButton'\r\n\r\nconst logInValidation = yup.object().shape({\r\n    email: yup.string()\r\n      .email('Invalid email')\r\n      .required(\"Email is required\"),\r\n    password: yup.string()\r\n        .required(\"Password is required\")\r\n})\r\nclass LogInComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n\r\n        this.logIn = this.logIn.bind(this)\r\n        this.changeRememberSignInCheck = this.changeRememberSignInCheck.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let {email, password} = this.state\r\n        return (\r\n            <div className=\"container logInPage\">\r\n                <Formik\r\n                    initialValues={{email, password}}\r\n                    onSubmit={this.logIn}\r\n                    validationSchema={logInValidation}\r\n                >\r\n                {\r\n                    (props) => \r\n                    {\r\n                        let {errors, touched} = props\r\n                        return (\r\n                            <div>\r\n                                <h1>Log In to Birthday Calendar</h1>\r\n                                <Form>                                \r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field type=\"email\" name=\"email\" placeholder=\"Email\"/>\r\n                                    </fieldset>          \r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field type=\"password\" name=\"password\" placeholder=\"Password\"/>                                    \r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-check\">\r\n                                        <input type=\"checkbox\" id=\"rememberSignInChk\" onChange={this.changeRememberSignInCheck}/>\r\n                                        <label htmlFor=\"rememberSignInChk\">&nbsp;Remember me on this device</label>\r\n                                    </fieldset>\r\n                                    <button className=\"btn-success\" type=\"submit\">Log In</button>\r\n                                    {this.state.serverErrorMessage?(<div className=\"alert alert-danger\">{this.state.serverErrorMessage}</div>):(<div></div>)}\r\n                                    {(errors.email && touched.email)?(<div className=\"alert alert-danger\">{errors.email}</div>):(<div></div>)}\r\n                                    {(errors.password && touched.password)?(<div className=\"alert alert-danger\">{errors.password}</div>):(<div></div>)}\r\n                                </Form>\r\n                            </div>                            \r\n                        )\r\n                        \r\n                    }\r\n                }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logIn(logInCredentials) {\r\n        this.setState({serverErrorMessage: null})\r\n        AccountService.logIn(logInCredentials)\r\n        .then(\r\n            response => {\r\n                ApiUtil.setupRequestInterceptor(response.data.token)\r\n                this.props.history.push('/home')\r\n            }\r\n        )\r\n        .catch (\r\n            error => {\r\n                Utility.defaultApiErrorHandling(error, this)\r\n            }            \r\n        )\r\n    }\r\n\r\n    changeRememberSignInCheck(event) {\r\n        console.log(event.target)\r\n        this.setState({willRememberSignIn: event.target.checked })\r\n    }\r\n}\r\n\r\nexport default LogInComponent"]},"metadata":{},"sourceType":"module"}