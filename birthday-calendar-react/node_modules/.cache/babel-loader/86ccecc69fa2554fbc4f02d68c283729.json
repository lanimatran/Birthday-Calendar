{"ast":null,"code":"import _classCallCheck from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Button from'react-bootstrap/Button';import*as yup from'yup';import{Formik,Form,Field}from'formik';import AccountService from'../ApiServices/AccountService';var signUpValidation=yup.object().shape({firstName:yup.string().required('First Name is required'),lastName:yup.string().required('Last Name is required'),email:yup.string().email('Invalid email').test('Unique Email','Email is already in use. Please log in or reset password.',function(value){return new Promise(function(resolve){AccountService.checkExistingEmail(value).then(function(){return resolve(true);}).catch(function(){return resolve(false);});});}).required(\"Email is required\"),password:yup.string().min(8,'Passwords has to be at least 8 characters long').required(\"Password is required\"),confirmPassword:yup.string().oneOf([yup.ref('password')],'Passwords must match').required(\"Please confirm your Password\")});var SignUpPage=/*#__PURE__*/function(_Component){_inherits(SignUpPage,_Component);var _super=_createSuper(SignUpPage);function SignUpPage(props){var _this;_classCallCheck(this,SignUpPage);_this=_super.call(this,props);_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(SignUpPage,[{key:\"render\",value:function render(){var initialState={email:'',password:'',confirmPassword:'',firstName:'',lastName:''};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Formik,{initialValues:initialState,validationSchema:signUpValidation,onSubmit:this.onSubmit,validateOnChange:false,validateOnBlur:true},function(props){var errors=props.errors,touched=props.touched;return/*#__PURE__*/ (// Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\nReact.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"First Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"firstName\",placeholder:\"First Name\"}),errors.lastName&&touched.firstName?/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.firstName):/*#__PURE__*/React.createElement(\"div\",null,\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Last Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"lastName\",placeholder:\"Last Name\"}),errors.lastName&&touched.lastName?/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.lastName):/*#__PURE__*/React.createElement(\"div\",null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"email\",name:\"email\",placeholder:\"Email Address\"}),errors.email&&touched.email&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.email)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Password\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"password\",name:\"password\",placeholder:\"Password\"}),errors.password&&touched.password&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.password)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"ConfirmPassword\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"password\",name:\"confirmPassword\",placeholder:\"Confirm Password\"}),errors.confirmPassword&&touched.confirmPassword&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.confirmPassword)))),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Sign Up\")));}));}},{key:\"onSubmit\",value:function onSubmit(values){var _this2=this;var firstName=values.firstName,lastName=values.lastName,email=values.email,password=values.password;var user={firstName:firstName,lastName:lastName,email:email,password:password};AccountService.signUp(user).then(function(response){_this2.props.history.push('/successfulRegistration');}).catch(function(error){console.log('failed');console.log(error);});}}]);return SignUpPage;}(Component);export default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Pages/SignUpPage.jsx"],"names":["React","Component","Button","yup","Formik","Form","Field","AccountService","signUpValidation","object","shape","firstName","string","required","lastName","email","test","value","Promise","resolve","checkExistingEmail","then","catch","password","min","confirmPassword","oneOf","ref","SignUpPage","props","onSubmit","bind","initialState","errors","touched","values","user","signUp","response","history","push","error","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport AccountService from '../ApiServices/AccountService';\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n    email: yup.string()\r\n      .email('Invalid email')\r\n      .test('Unique Email', 'Email is already in use. Please log in or reset password.', \r\n            (value) => new Promise( \r\n                (resolve) => {\r\n                    AccountService.checkExistingEmail(value)\r\n                    .then(\r\n                        () => resolve(true)\r\n                    )\r\n                    .catch (\r\n                        () => resolve(false)\r\n                    )\r\n            }))\r\n      .required(\"Email is required\"),\r\n    password: yup.string()\r\n        .min(8, 'Passwords has to be at least 8 characters long')\r\n        .required(\"Password is required\"),    \r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password')], 'Passwords must match')\r\n        .required(\"Please confirm your Password\")\r\n  });\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={signUpValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {errors, touched} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n                                                {(errors.lastName && touched.firstName)?(<div className=\"alert alert-danger\">{errors.firstName}</div>):(<div> </div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\"  placeholder=\"Last Name\"/>\r\n                                                {(errors.lastName && touched.lastName)?(<div className=\"alert alert-danger\">{errors.lastName}</div>):(<div></div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <Field className=\"form-control\" type=\"email\" name=\"email\"  placeholder=\"Email Address\"/>\r\n                                                {errors.email && touched.email && <div className=\"alert alert-danger\">{errors.email}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"password\"  placeholder=\"Password\"/>\r\n                                                {errors.password && touched.password && <div className=\"alert alert-danger\">{errors.password}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>ConfirmPassword</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\"/>\r\n                                                {errors.confirmPassword && touched.confirmPassword && <div className=\"alert alert-danger\">{errors.confirmPassword}</div>}                                    \r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let {firstName, lastName, email, password} = values\r\n        let user = {firstName, lastName, email, password}\r\n        AccountService.signUp(user)\r\n            .then(\r\n                response => \r\n                {\r\n                    this.props.history.push('/successfulRegistration')\r\n                }\r\n            )\r\n            .catch(\r\n                error => \r\n                {\r\n                    console.log('failed')\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}