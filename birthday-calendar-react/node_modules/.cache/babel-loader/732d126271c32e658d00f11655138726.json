{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'; //import ReactDatePicker from 'react-datepicker'\n//import \"react-datepicker/dist/react-datepicker.css\";\n\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nconst signUpValidation = yup.object().shape({\n  username: yup.string().min(6, 'Username has to be at least 6 characters long').required('Username is required'),\n  password: yup.string().min(8, 'Passwords has to be at least 8 characters long').required(),\n  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match').required(),\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required'),\n  email: yup.string().email('Invalid email')\n});\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let initialState = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      email: ''\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialState,\n      validationSchema: signUpValidation,\n      onSubmit: this.onSubmit,\n      validateOnChange: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        errors,\n        touched\n      } = props;\n      return (\n        /*#__PURE__*/\n        // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\n        React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }\n        }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 81\n          }\n        }, errors.username)), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }\n        }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 81\n          }\n        }, errors.password)), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          classname: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 68\n          }\n        }, \"ConfirmPassword\")), /*#__PURE__*/React.createElement(\"div\", {\n          classname: \"col-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 68\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          classname: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 45\n          }\n        }, errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 122\n          }\n        }, errors.confirmPassword)))), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }\n        }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"firstName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 41\n          }\n        }), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 83\n          }\n        }, errors.firstName)), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }\n        }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"lastName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }\n        }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 81\n          }\n        }, errors.lastName)), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }\n        }, \"Middle Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"middleName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"email\",\n          name: \"email\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }\n        }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 75\n          }\n        }, errors.email)), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }\n        }, \"Submit\"))\n      );\n    }));\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/SignUpPage.jsx"],"names":["React","Component","Button","yup","Formik","Form","Field","signUpValidation","object","shape","username","string","min","required","password","confirmPassword","oneOf","ref","firstName","lastName","email","SignUpPage","constructor","props","onSubmit","bind","render","initialState","errors","touched","values","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n//import ReactDatePicker from 'react-datepicker'\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    username: yup.string()\r\n        .min(6, 'Username has to be at least 6 characters long')\r\n        .required('Username is required'),\r\n    password: yup.string()\r\n        .min(8, 'Passwords has to be at least 8 characters long')\r\n        .required(),    \r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password')], 'Passwords must match')\r\n        .required(),\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n    email: yup.string()\r\n      .email('Invalid email')\r\n  });\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: ''\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={signUpValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {errors, touched} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Username</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"username\"/>\r\n                                        {errors.username && touched.username && <div>{errors.username}</div>}\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Password</label>\r\n                                        <Field className=\"form-control\" type=\"password\" name=\"password\"/>\r\n                                        {errors.password && touched.password && <div>{errors.password}</div>}\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div classname=\"col-3\"><label>ConfirmPassword</label></div>\r\n                                            <div classname=\"col-5\"><Field className=\"form-control\" type=\"password\" name=\"confirmPassword\"/></div>\r\n                                            <div classname=\"col-2\">{errors.confirmPassword && touched.confirmPassword && <div>{errors.confirmPassword}</div>}</div>\r\n                                        </div>\r\n                                       \r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>First Name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"firstName\"/>\r\n                                        {errors.firstName && touched.firstName && <div>{errors.firstName}</div>}\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Last Name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"lastName\"/>\r\n                                        {errors.lastName && touched.lastName && <div>{errors.lastName}</div>}\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Middle Name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"middleName\"/>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Email</label>\r\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\"/>\r\n                                        {errors.email && touched.email && <div>{errors.email}</div>}\r\n                                    </fieldset>\r\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(values)\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}