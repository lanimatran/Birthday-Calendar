{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\BirthdayPage.jsx\";\nimport React, { Component } from \"react\";\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport Button from 'react-bootstrap/Button';\nconst BIRTH_MONTH = [{\n  description: 'January',\n  value: 1\n}, {\n  description: 'February',\n  value: 2\n}];\nconst birthdayValidation = yup.object().shape({\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required')\n});\n\nclass BirthdayPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let initialState = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: ''\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialState,\n      validationSchema: birthdayValidation,\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        errors,\n        touched\n      } = props;\n      return (\n        /*#__PURE__*/\n        // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\n        React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }\n        }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 90\n          }\n        }, errors.firstName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 153\n          }\n        }, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 49\n          }\n        }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 89\n          }\n        }, errors.lastName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 151\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 49\n          }\n        }, \"Birth Month\"), /*#__PURE__*/React.createElement(Field, {\n          as: \"select\",\n          name: \"birthMonth\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 49\n          }\n        }, BIRTH_MONTH.map(month => /*#__PURE__*/React.createElement(\"option\", {\n          value: month.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 57\n          }\n        }, month.description, \"}\")), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"green\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 53\n          }\n        }, \"Green\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 53\n          }\n        }, \"Blue\"))))), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }\n        }, \"Sign Up\"))\n      );\n    }));\n  }\n\n  onSubmit(values) {\n    let {\n      firstName,\n      lastName,\n      email,\n      password\n    } = values;\n    let user = {\n      firstName,\n      lastName,\n      email,\n      password\n    };\n  }\n\n}\n\nexport default BirthdayPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/BirthdayPage.jsx"],"names":["React","Component","yup","Formik","Form","Field","Button","BIRTH_MONTH","description","value","birthdayValidation","object","shape","firstName","string","required","lastName","BirthdayPage","constructor","props","onSubmit","bind","render","initialState","email","password","confirmPassword","errors","touched","map","month","values","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst BIRTH_MONTH = [\r\n    {description: 'January', value: 1},\r\n    {description: 'February', value: 2},\r\n]\r\n\r\nconst birthdayValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n  });\r\n\r\nclass BirthdayPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={birthdayValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {errors, touched} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n                                                {(errors.lastName && touched.firstName)?(<div className=\"alert alert-danger\">{errors.firstName}</div>):(<div> </div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\"  placeholder=\"Last Name\"/>\r\n                                                {(errors.lastName && touched.lastName)?(<div className=\"alert alert-danger\">{errors.lastName}</div>):(<div></div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Birth Month</label>\r\n                                                <Field as=\"select\" name=\"birthMonth\">\r\n                                                {\r\n                                                    BIRTH_MONTH.map(month => \r\n                                                        <option value={month.value}>{month.description}}</option>\r\n                                                    )\r\n                                                }\r\n                                                    \r\n                                                    <option value=\"green\">Green</option>\r\n                                                    <option value=\"blue\">Blue</option>\r\n                                                </Field>\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let {firstName, lastName, email, password} = values\r\n        let user = {firstName, lastName, email, password}\r\n    }\r\n}\r\n\r\nexport default BirthdayPage"]},"metadata":{},"sourceType":"module"}