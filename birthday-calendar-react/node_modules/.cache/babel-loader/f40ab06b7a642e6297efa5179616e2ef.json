{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport AccountService from '../ApiServices/AccountService';\nconst signUpValidation = yup.object().shape({\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required'),\n  email: yup.string().email('Invalid email').test('Unique Email', 'Email is already in use. Please log in or reset password.', value => new Promise(resolve => {\n    AccountService.checkExistingEmail(value).then(() => resolve(true)).catch(() => resolve(false));\n  })).required(\"Email is required\"),\n  password: yup.string().min(8, 'Passwords has to be at least 8 characters long').required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match').required(\"Please confirm your Password\")\n});\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let initialState = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: ''\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialState,\n      validationSchema: signUpValidation,\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        errors,\n        touched\n      } = props;\n      return (\n        /*#__PURE__*/\n        // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\n        React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }\n        }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 49\n          }\n        }), errors.firstName && touched.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 91\n          }\n        }, errors.firstName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 154\n          }\n        }, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 49\n          }\n        }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 89\n          }\n        }, errors.lastName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 151\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 49\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 49\n          }\n        }), errors.username && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 86\n          }\n        }, errors.email)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 49\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email Address\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 49\n          }\n        }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 83\n          }\n        }, errors.email)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 49\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 49\n          }\n        }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 89\n          }\n        }, errors.password)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }\n        }, \"ConfirmPassword\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 49\n          }\n        }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 103\n          }\n        }, errors.confirmPassword)))), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }\n        }, \"Sign Up\"))\n      );\n    }));\n  }\n\n  onSubmit(values) {\n    let {\n      firstName,\n      lastName,\n      email,\n      password\n    } = values;\n    let user = {\n      firstName,\n      lastName,\n      email,\n      password\n    };\n    AccountService.signUp(user).then(response => {\n      this.props.history.push('/successfulRegistration');\n    }).catch(error => {\n      console.log('failed');\n      console.log(error);\n    });\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Pages/SignUpPage.jsx"],"names":["React","Component","Button","yup","Formik","Form","Field","AccountService","signUpValidation","object","shape","firstName","string","required","lastName","email","test","value","Promise","resolve","checkExistingEmail","then","catch","password","min","confirmPassword","oneOf","ref","SignUpPage","constructor","props","onSubmit","bind","render","initialState","errors","touched","username","values","user","signUp","response","history","push","error","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport AccountService from '../ApiServices/AccountService';\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n    email: yup.string()\r\n      .email('Invalid email')\r\n      .test('Unique Email', 'Email is already in use. Please log in or reset password.', \r\n            (value) => new Promise( \r\n                (resolve) => {\r\n                    AccountService.checkExistingEmail(value)\r\n                    .then(\r\n                        () => resolve(true)\r\n                    )\r\n                    .catch (\r\n                        () => resolve(false)\r\n                    )\r\n            }))\r\n      .required(\"Email is required\"),\r\n    password: yup.string()\r\n        .min(8, 'Passwords has to be at least 8 characters long')\r\n        .required(\"Password is required\"),    \r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password')], 'Passwords must match')\r\n        .required(\"Please confirm your Password\")\r\n  });\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={signUpValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {errors, touched} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n                                                {(errors.firstName && touched.firstName)?(<div className=\"alert alert-danger\">{errors.firstName}</div>):(<div> </div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\"  placeholder=\"Last Name\"/>\r\n                                                {(errors.lastName && touched.lastName)?(<div className=\"alert alert-danger\">{errors.lastName}</div>):(<div></div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Username</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n                                                {errors.username && touched.email && <div className=\"alert alert-danger\">{errors.email}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <Field className=\"form-control\" type=\"email\" name=\"email\"  placeholder=\"Email Address\"/>\r\n                                                {errors.email && touched.email && <div className=\"alert alert-danger\">{errors.email}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"password\"  placeholder=\"Password\"/>\r\n                                                {errors.password && touched.password && <div className=\"alert alert-danger\">{errors.password}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>ConfirmPassword</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\"/>\r\n                                                {errors.confirmPassword && touched.confirmPassword && <div className=\"alert alert-danger\">{errors.confirmPassword}</div>}                                    \r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let {firstName, lastName, email, password} = values\r\n        let user = {firstName, lastName, email, password}\r\n        AccountService.signUp(user)\r\n            .then(\r\n                response => \r\n                {\r\n                    this.props.history.push('/successfulRegistration')\r\n                }\r\n            )\r\n            .catch(\r\n                error => \r\n                {\r\n                    console.log('failed')\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}