{"ast":null,"code":"import Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nclass ApiUtil {\n  createJwtToken(token) {\n    return 'Bearer ' + token;\n  }\n\n  setupRequestInterceptor(token) {\n    let header = this.createJwtToken(token);\n    Axios.interceptors.request.use(config => {\n      config.headers.authorization = header;\n      return config;\n    });\n  }\n\n  setupResponseInterceptor(returnToLogIn) {\n    Axios.interceptors.response.use(response => response, error => {\n      console.log(error.response.status);\n\n      if (error.response && error.response.status === 401) {\n        returnToLogIn();\n      }\n    });\n  }\n\n}\n\nexport default new ApiUtil();","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/ApiServices/ApiUtil.js"],"names":["Axios","useHistory","ApiUtil","createJwtToken","token","setupRequestInterceptor","header","interceptors","request","use","config","headers","authorization","setupResponseInterceptor","returnToLogIn","response","error","console","log","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAN,CAAc;AACVC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,YAAYA,KAAnB;AACH;;AAEDC,EAAAA,uBAAuB,CAACD,KAAD,EAAQ;AAC3B,QAAIE,MAAM,GAAG,KAAKH,cAAL,CAAoBC,KAApB,CAAb;AACAJ,IAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BN,MAA/B;AACA,aAAOI,MAAP;AACH,KAJL;AAMH;;AAEDG,EAAAA,wBAAwB,CAACC,aAAD,EAAgB;AACpCd,IAAAA,KAAK,CAACO,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACIM,QAAQ,IAAIA,QADhB,EAEIC,KAAK,IACL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACD,QAAN,CAAeI,MAA3B;;AACA,UAAIH,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeI,MAAf,KAA0B,GAAhD,EACA;AACIL,QAAAA,aAAa;AAChB;AACJ,KATL;AAWH;;AA3BS;;AA8Bd,eAAe,IAAIZ,OAAJ,EAAf","sourcesContent":["import Axios from \"axios\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nclass ApiUtil {    \r\n    createJwtToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    setupRequestInterceptor(token) {\r\n        let header = this.createJwtToken(token)\r\n        Axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers.authorization = header\r\n                return config\r\n            }\r\n        )\r\n    }\r\n\r\n    setupResponseInterceptor(returnToLogIn) {\r\n        Axios.interceptors.response.use(\r\n            response => response,\r\n            error =>\r\n            {\r\n                console.log(error.response.status)\r\n                if (error.response && error.response.status === 401)\r\n                {\r\n                    returnToLogIn();\r\n                }\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new ApiUtil()"]},"metadata":{},"sourceType":"module"}