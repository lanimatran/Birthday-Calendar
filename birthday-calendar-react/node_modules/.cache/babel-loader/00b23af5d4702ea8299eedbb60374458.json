{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\LogInPage.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport AccountService from '../../ApiServices/AccountService';\nimport ApiUtil from '../../ApiServices/ApiUtil'; //import GoogleBtn from '../Buttons/GoogleButton'\n\nclass LogInPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n    this.logIn = this.logIn.bind(this);\n  }\n\n  render() {\n    let {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container logInPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email,\n        password\n      },\n      onSubmit: this.logIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \"Log In\"))));\n  }\n\n  logIn(logInCredentials) {\n    AccountService.logIn(logInCredentials).then(response => {\n      ApiUtil.setupRequestInterceptor(response.data.token);\n      this.props.history.push('/home');\n    }).catch(error => {\n      if (error.response) {\n        // Request made and server responded\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n    });\n  }\n\n}\n\nexport default LogInPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/LogInPage.jsx"],"names":["React","Component","Formik","Form","Field","AccountService","ApiUtil","LogInPage","constructor","props","state","email","password","error","logIn","bind","render","logInCredentials","then","response","setupRequestInterceptor","data","token","history","push","catch","console","log","status","headers","request","message"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport AccountService from '../../ApiServices/AccountService'\r\nimport ApiUtil from '../../ApiServices/ApiUtil'\r\n//import GoogleBtn from '../Buttons/GoogleButton'\r\n\r\nclass LogInPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: ''\r\n        }\r\n\r\n        this.logIn = this.logIn.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let {email, password} = this.state\r\n        return (\r\n            <div className=\"container logInPage\">\r\n                <Formik\r\n                    initialValues={{email, password}}\r\n                    onSubmit={this.logIn}\r\n                >\r\n                {\r\n                    (props) => (\r\n                        <Form>\r\n                            <fieldset className=\"form-group\">\r\n                                <label>Email:</label>\r\n                                <Field type=\"email\" name=\"email\"/>\r\n                            </fieldset>          \r\n                            <fieldset className=\"form-group\">\r\n                                <label>Password:</label>\r\n                                <Field type=\"password\" name=\"password\"/>\r\n                            </fieldset>\r\n                            <button className=\"btn-success\" type=\"submit\">Log In</button>\r\n                        </Form>\r\n                    )\r\n                }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logIn(logInCredentials) {\r\n        AccountService.logIn(logInCredentials)\r\n        .then(\r\n            response => {\r\n                ApiUtil.setupRequestInterceptor(response.data.token)\r\n                this.props.history.push('/home')\r\n            }\r\n        )\r\n        .catch (\r\n            error => {\r\n                if (error.response) {\r\n                    // Request made and server responded\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                  } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.log(error.request);\r\n                  } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.log('Error', error.message);\r\n                  }\r\n            }            \r\n        )\r\n    }\r\n}\r\n\r\nexport default LogInPage"]},"metadata":{},"sourceType":"module"}