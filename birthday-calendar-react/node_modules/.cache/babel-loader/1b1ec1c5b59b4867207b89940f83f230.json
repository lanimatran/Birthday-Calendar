{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getUserLoggedIn();\n    let todo = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id == -1) {\n      TodoDataService.createTodo(username, todo).then(() => this.props.history.push(`/todo`));\n    } else {\n      TodoDataService.updateTodo(username, this.state.id, todo).then(() => this.props.history.push(`/todo`));\n    }\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = 'Please enter a Description';\n    }\n\n    return errors;\n  }\n\n  componentDidMount() {\n    if (this.state.id == -1) {\n      this.setState({\n        description: '',\n        targetDate: moment(new Date()).format('YYYY-MM-DD')\n      });\n    } else {\n      let username = AuthenticationService.getUserLoggedIn();\n      TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n        description: response.data.description,\n        targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n      }));\n    }\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Todo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        description,\n        targetDate\n      },\n      onSubmit: this.onSubmit,\n      validate: this.validate,\n      validateOnChange: false,\n      validateOnBlur: false,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"Target Date\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"targetDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/SignUpPage.jsx"],"names":["React","Component","Form","Col","Row","Button","ReactDatePicker","yup","Formik","TodoComponent","constructor","props","state","id","match","params","description","targetDate","moment","Date","format","onSubmit","bind","validate","values","username","AuthenticationService","getUserLoggedIn","todo","TodoDataService","createTodo","then","history","push","updateTodo","errors","componentDidMount","setState","retrieveTodo","response","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactDatePicker from 'react-datepicker'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nclass TodoComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            description : '',\r\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let username = AuthenticationService.getUserLoggedIn()\r\n        let todo = {id: this.state.id, description: values.description, targetDate: values.targetDate}\r\n        if (this.state.id == -1) {\r\n            TodoDataService.createTodo(username, todo)\r\n            .then(() => this.props.history.push(`/todo`))\r\n        }\r\n        else {\r\n            TodoDataService.updateTodo(username, this.state.id, todo)\r\n            .then(() => this.props.history.push(`/todo`))\r\n        }\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.description) {\r\n            errors.description = 'Please enter a Description'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.id == -1)    \r\n        {\r\n            this.setState(\r\n            {\r\n                    description: '',\r\n                    targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n            })\r\n        }\r\n        else {\r\n            let username = AuthenticationService.getUserLoggedIn()\r\n            TodoDataService.retrieveTodo(username, this.state.id)\r\n            .then(response => this.setState(\r\n                {\r\n                    description: response.data.description,\r\n                    targetDate: moment(response.data.targetDate).format('YYYY-MM-DD'),\r\n                }\r\n            ))\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        let {description,targetDate} = this.state\r\n        return (\r\n            <div>\r\n                <h1>Todo</h1>\r\n                <div className=\"container\">\r\n                    <Formik \r\n                        initialValues={{description,targetDate}} \r\n                        onSubmit={this.onSubmit}\r\n                        validate={this.validate}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Target Date</label>\r\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"></Field>\r\n                                    </fieldset>\r\n                                    <button className=\"btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}