{"ast":null,"code":"import { SERVER_CONNECTION_ERROR_MESSAGE, UNKNOWN_ERROR_ERROR_MESSAGE, STORAGE_AUTHENTICATION_TOKEN_KEY, STORAGE_FIRST_NAME_KEY } from \"./GlobalConstants\";\n\nclass Utility {\n  getFullNameFromComponents(firstName, lastName, middleName, suffix) {\n    var fullName = firstName + ' ' + lastName;\n    fullName = middleName && middleName !== '' ? fullName + ', ' + middleName : fullName;\n    fullName = suffix && suffix !== '' ? fullName + ' ' + suffix : fullName;\n    return fullName;\n  }\n\n  getBirthdayFromComponents(birthmonth, birthday) {\n    return birthmonth + '/' + birthday;\n  }\n\n  getFirstNameFromStorage() {\n    let firstName = sessionStorage.getItem(STORAGE_FIRST_NAME_KEY);\n    if (firstName) return firstName;\n    return '';\n  }\n\n  defaultApiErrorHandling(error, object) {\n    if (error.response) {\n      object.setState({\n        serverErrorMessage: error.response.data.message\n      });\n    } else if (error.request) {\n      object.setState({\n        serverErrorMessage: SERVER_CONNECTION_ERROR_MESSAGE\n      });\n    } else {\n      object.setState({\n        serverErrorMessage: UNKNOWN_ERROR_ERROR_MESSAGE\n      });\n    }\n  }\n\n  isUserAuthenticated() {\n    if (sessionStorage.getItem(STORAGE_AUTHENTICATION_TOKEN_KEY)) return true;\n    return false;\n  }\n\n  saveLocalData(data, willSaveTokenToLocalStorage, authenticationChangeHandler) {\n    if (willSaveTokenToLocalStorage) {\n      localStorage.setItem(STORAGE_AUTHENTICATION_TOKEN_KEY, data.token);\n      localStorage.setItem(STORAGE_FIRST_NAME_KEY, data.first_Name);\n    }\n\n    sessionStorage.setItem(STORAGE_AUTHENTICATION_TOKEN_KEY, data.token);\n    sessionStorage.setItem(STORAGE_FIRST_NAME_KEY, data.firstName);\n    authenticationChangeHandler();\n  }\n\n  removeToken(authenticationChangeHandler) {\n    sessionStorage.clear();\n    localStorage.clear();\n    authenticationChangeHandler();\n  }\n\n}\n\nexport default new Utility();","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Utility/Utility.js"],"names":["SERVER_CONNECTION_ERROR_MESSAGE","UNKNOWN_ERROR_ERROR_MESSAGE","STORAGE_AUTHENTICATION_TOKEN_KEY","STORAGE_FIRST_NAME_KEY","Utility","getFullNameFromComponents","firstName","lastName","middleName","suffix","fullName","getBirthdayFromComponents","birthmonth","birthday","getFirstNameFromStorage","sessionStorage","getItem","defaultApiErrorHandling","error","object","response","setState","serverErrorMessage","data","message","request","isUserAuthenticated","saveLocalData","willSaveTokenToLocalStorage","authenticationChangeHandler","localStorage","setItem","token","first_Name","removeToken","clear"],"mappings":"AAAA,SAASA,+BAAT,EAA0CC,2BAA1C,EAAuEC,gCAAvE,EAAyGC,sBAAzG,QAAuI,mBAAvI;;AAEA,MAAMC,OAAN,CAAc;AACVC,EAAAA,yBAAyB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0C;AAC/D,QAAIC,QAAQ,GAAGJ,SAAS,GAAG,GAAZ,GAAkBC,QAAjC;AACAG,IAAAA,QAAQ,GAAIF,UAAU,IAAIA,UAAU,KAAK,EAA9B,GAAmCE,QAAQ,GAAG,IAAX,GAAkBF,UAArD,GAAiEE,QAA5E;AACAA,IAAAA,QAAQ,GAAID,MAAM,IAAIA,MAAM,KAAK,EAAtB,GAA2BC,QAAQ,GAAG,GAAX,GAAiBD,MAA5C,GAAoDC,QAA/D;AACA,WAAOA,QAAP;AACH;;AAEDC,EAAAA,yBAAyB,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC5C,WAAOD,UAAU,GAAG,GAAb,GAAmBC,QAA1B;AACH;;AAEDC,EAAAA,uBAAuB,GAAG;AACtB,QAAIR,SAAS,GAAGS,cAAc,CAACC,OAAf,CAAuBb,sBAAvB,CAAhB;AACA,QAAIG,SAAJ,EAAgB,OAAOA,SAAP;AAChB,WAAO,EAAP;AACH;;AAEDW,EAAAA,uBAAuB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnC,QAAID,KAAK,CAACE,QAAV,EAAoB;AAChBD,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAEJ,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC;AAAzC,OAAhB;AACH,KAFD,MAEO,IAAIN,KAAK,CAACO,OAAV,EAAmB;AACtBN,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAEtB;AAArB,OAAhB;AACH,KAFM,MAEA;AACHmB,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAErB;AAArB,OAAhB;AACH;AACJ;;AAEDyB,EAAAA,mBAAmB,GAAG;AAClB,QAAIX,cAAc,CAACC,OAAf,CAAuBd,gCAAvB,CAAJ,EAA8D,OAAO,IAAP;AAC9D,WAAO,KAAP;AACH;;AAEDyB,EAAAA,aAAa,CAACJ,IAAD,EAAOK,2BAAP,EAAoCC,2BAApC,EAAiE;AAC1E,QAAID,2BAAJ,EAAkC;AAC9BE,MAAAA,YAAY,CAACC,OAAb,CAAqB7B,gCAArB,EAAuDqB,IAAI,CAACS,KAA5D;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB5B,sBAArB,EAA6CoB,IAAI,CAACU,UAAlD;AACH;;AACDlB,IAAAA,cAAc,CAACgB,OAAf,CAAuB7B,gCAAvB,EAAyDqB,IAAI,CAACS,KAA9D;AACAjB,IAAAA,cAAc,CAACgB,OAAf,CAAuB5B,sBAAvB,EAA+CoB,IAAI,CAACjB,SAApD;AACAuB,IAAAA,2BAA2B;AAC9B;;AAEDK,EAAAA,WAAW,CAACL,2BAAD,EAA8B;AACrCd,IAAAA,cAAc,CAACoB,KAAf;AACAL,IAAAA,YAAY,CAACK,KAAb;AACAN,IAAAA,2BAA2B;AAC9B;;AA/CS;;AAkDd,eAAe,IAAIzB,OAAJ,EAAf","sourcesContent":["import { SERVER_CONNECTION_ERROR_MESSAGE, UNKNOWN_ERROR_ERROR_MESSAGE, STORAGE_AUTHENTICATION_TOKEN_KEY, STORAGE_FIRST_NAME_KEY } from \"./GlobalConstants\"\r\n\r\nclass Utility {\r\n    getFullNameFromComponents(firstName, lastName, middleName, suffix) {\r\n        var fullName = firstName + ' ' + lastName\r\n        fullName = (middleName && middleName !== '')?(fullName + ', ' + middleName):fullName \r\n        fullName = (suffix && suffix !== '')?(fullName + ' ' + suffix):fullName\r\n        return fullName\r\n    }\r\n\r\n    getBirthdayFromComponents(birthmonth, birthday) {\r\n        return birthmonth + '/' + birthday\r\n    }\r\n\r\n    getFirstNameFromStorage() {\r\n        let firstName = sessionStorage.getItem(STORAGE_FIRST_NAME_KEY)\r\n        if (firstName)  return firstName;\r\n        return '';\r\n    }\r\n\r\n    defaultApiErrorHandling(error, object) {\r\n        if (error.response) {\r\n            object.setState({serverErrorMessage: error.response.data.message})\r\n        } else if (error.request) {\r\n            object.setState({serverErrorMessage: SERVER_CONNECTION_ERROR_MESSAGE})\r\n        } else {\r\n            object.setState({serverErrorMessage: UNKNOWN_ERROR_ERROR_MESSAGE})\r\n        }\r\n    }\r\n\r\n    isUserAuthenticated() {\r\n        if (sessionStorage.getItem(STORAGE_AUTHENTICATION_TOKEN_KEY)) return true;\r\n        return false;\r\n    }\r\n\r\n    saveLocalData(data, willSaveTokenToLocalStorage, authenticationChangeHandler) {\r\n        if (willSaveTokenToLocalStorage)  {\r\n            localStorage.setItem(STORAGE_AUTHENTICATION_TOKEN_KEY, data.token)\r\n            localStorage.setItem(STORAGE_FIRST_NAME_KEY, data.first_Name)\r\n        }\r\n        sessionStorage.setItem(STORAGE_AUTHENTICATION_TOKEN_KEY, data.token)\r\n        sessionStorage.setItem(STORAGE_FIRST_NAME_KEY, data.firstName)\r\n        authenticationChangeHandler()\r\n    }\r\n\r\n    removeToken(authenticationChangeHandler) {\r\n        sessionStorage.clear()\r\n        localStorage.clear()\r\n        authenticationChangeHandler()\r\n    }\r\n}\r\n\r\nexport default new Utility()"]},"metadata":{},"sourceType":"module"}