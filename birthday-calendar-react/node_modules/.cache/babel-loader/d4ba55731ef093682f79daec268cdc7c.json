{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport AccountService from '../ApiServices/AccountService';\nconst signUpValidation = yup.object().shape({\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required'),\n  username: yup.string().required(\"Email is required\").email('Invalid email').test('Unique Email', 'Email is already in use. Please log in or reset password.', value => new Promise(resolve => {\n    AccountService.checkExistingEmail(value).then(() => resolve(true)).catch(() => resolve(false));\n  })),\n  email: yup.string().required(\"Email is required\").email('Invalid email').test('Unique Email', 'Email is already in use. Please log in or reset password.', value => new Promise(resolve => {\n    AccountService.checkExistingEmail(value).then(() => resolve(true)).catch(() => resolve(false));\n  })),\n  password: yup.string().min(8, 'Passwords has to be at least 8 characters long').required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match').required(\"Please confirm your Password\")\n});\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let initialState = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: ''\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialState,\n      validationSchema: signUpValidation,\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        errors,\n        touched\n      } = props;\n      return (\n        /*#__PURE__*/\n        // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\n        React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 49\n          }\n        }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 49\n          }\n        }), errors.firstName && touched.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 93\n          }\n        }, errors.firstName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 158\n          }\n        }, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 49\n          }\n        }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 91\n          }\n        }, errors.lastName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 155\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 49\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 49\n          }\n        }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 89\n          }\n        }, errors.username)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 49\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email Address\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 49\n          }\n        }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 83\n          }\n        }, errors.email)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 49\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 49\n          }\n        }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 89\n          }\n        }, errors.password)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 49\n          }\n        }, \"ConfirmPassword\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 49\n          }\n        }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 103\n          }\n        }, errors.confirmPassword)))), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }, \"Sign Up\"))\n      );\n    }));\n  }\n\n  onSubmit(values) {\n    let {\n      firstName,\n      lastName,\n      email,\n      password\n    } = values;\n    let user = {\n      firstName,\n      lastName,\n      email,\n      password\n    };\n    AccountService.signUp(user).then(response => {\n      this.props.history.push('/successfulRegistration');\n    }).catch(error => {\n      console.log('failed');\n      console.log(error);\n    });\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Pages/SignUpPage.jsx"],"names":["React","Component","Button","yup","Formik","Form","Field","AccountService","signUpValidation","object","shape","firstName","string","required","lastName","username","email","test","value","Promise","resolve","checkExistingEmail","then","catch","password","min","confirmPassword","oneOf","ref","SignUpPage","constructor","props","onSubmit","bind","render","initialState","errors","touched","values","user","signUp","response","history","push","error","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport AccountService from '../ApiServices/AccountService';\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n        .required('First Name is required'),\r\n    lastName: yup.string()\r\n        .required('Last Name is required'),\r\n    username: yup.string()\r\n        .required(\"Email is required\")\r\n        .email('Invalid email')\r\n        .test('Unique Email', 'Email is already in use. Please log in or reset password.',\r\n            (value) => new Promise(\r\n                (resolve) => {\r\n                    AccountService.checkExistingEmail(value)\r\n                        .then(\r\n                            () => resolve(true)\r\n                        )\r\n                        .catch(\r\n                            () => resolve(false)\r\n                        )\r\n                })),        \r\n    email: yup.string()\r\n        .required(\"Email is required\")\r\n        .email('Invalid email')        \r\n        .test('Unique Email', 'Email is already in use. Please log in or reset password.',\r\n            (value) => new Promise(\r\n                (resolve) => {\r\n                    AccountService.checkExistingEmail(value)\r\n                        .then(\r\n                            () => resolve(true)\r\n                        )\r\n                        .catch(\r\n                            () => resolve(false)\r\n                        )\r\n                })),        \r\n    password: yup.string()\r\n        .min(8, 'Passwords has to be at least 8 characters long')\r\n        .required(\"Password is required\"),\r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password')], 'Passwords must match')\r\n        .required(\"Please confirm your Password\")\r\n});\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={signUpValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                >\r\n                    {\r\n                        (props) => {\r\n                            let { errors, touched } = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" />\r\n                                                {(errors.firstName && touched.firstName) ? (<div className=\"alert alert-danger\">{errors.firstName}</div>) : (<div> </div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" />\r\n                                                {(errors.lastName && touched.lastName) ? (<div className=\"alert alert-danger\">{errors.lastName}</div>) : (<div></div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Username</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n                                                {errors.username && touched.username && <div className=\"alert alert-danger\">{errors.username}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <Field className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email Address\" />\r\n                                                {errors.email && touched.email && <div className=\"alert alert-danger\">{errors.email}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                                                {errors.password && touched.password && <div className=\"alert alert-danger\">{errors.password}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>ConfirmPassword</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" />\r\n                                                {errors.confirmPassword && touched.confirmPassword && <div className=\"alert alert-danger\">{errors.confirmPassword}</div>}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let { firstName, lastName, email, password } = values\r\n        let user = { firstName, lastName, email, password }\r\n        AccountService.signUp(user)\r\n            .then(\r\n                response => {\r\n                    this.props.history.push('/successfulRegistration')\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    console.log('failed')\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}