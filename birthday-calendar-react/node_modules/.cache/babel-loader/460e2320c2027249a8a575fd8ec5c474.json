{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\BirthdayPage.jsx\";\nimport React, { Component } from \"react\";\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport Button from 'react-bootstrap/Button';\nimport BirthdayService from \"../../ApiServices/BirthdayService\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst BIRTH_MONTH = [{\n  description: 'January',\n  value: 1\n}, {\n  description: 'February',\n  value: 2\n}, {\n  description: 'March',\n  value: 3\n}, {\n  description: 'April',\n  value: 4\n}, {\n  description: 'May',\n  value: 5\n}, {\n  description: 'June',\n  value: 6\n}, {\n  description: 'July',\n  value: 7\n}, {\n  description: 'August',\n  value: 8\n}, {\n  description: 'September',\n  value: 9\n}, {\n  description: 'October',\n  value: 10\n}, {\n  description: 'November',\n  value: 11\n}, {\n  description: 'December',\n  value: 12\n}];\nconst BIRTH_DAY = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\nconst birthdayValidation = yup.object().shape({\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required'),\n  birthMonth: yup.string().required('First Name is required'),\n  birthDay: yup.string().required('Last Name is required'),\n  willRemindCustomTime: yup.boolean(),\n  customDate: yup.date().when(\"willRemindCustomTime\", {\n    is: true,\n    then: yup.date().required(\"Must specify custom date\").nullable()\n  }).nullable()\n});\n\nclass BirthdayPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      willRemindCustomTime: false\n    };\n    this.changeWillRemindCustomTime = this.changeWillRemindCustomTime.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let initialState = {\n      firstName: '',\n      lastName: '',\n      birthMonth: 0,\n      birthDay: 0,\n      willRemindOneDayPrior: false,\n      willRemindOneWeekPrior: false,\n      willRemindCustomTime: false,\n      customDate: null\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialState,\n      validationSchema: birthdayValidation,\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, props => {\n      let {\n        values,\n        errors,\n        touched,\n        setFieldValue\n      } = props;\n      return (\n        /*#__PURE__*/\n        // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\n        React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 49\n          }\n        }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 90\n          }\n        }, errors.firstName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 153\n          }\n        }, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 49\n          }\n        }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }\n        }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 89\n          }\n        }, errors.lastName) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 151\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 49\n          }\n        }, \"Birth Month\"), /*#__PURE__*/React.createElement(Field, {\n          as: \"select\",\n          name: \"birthMonth\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 49\n          }\n        }, BIRTH_MONTH.map(month => /*#__PURE__*/React.createElement(\"option\", {\n          key: month.value,\n          value: month.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 66\n          }\n        }, month.description))))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 49\n          }\n        }, \"Birth Day\"), /*#__PURE__*/React.createElement(Field, {\n          as: \"select\",\n          name: \"birthDay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 49\n          }\n        }, BIRTH_DAY.map(day => /*#__PURE__*/React.createElement(\"option\", {\n          key: day,\n          value: day,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 64\n          }\n        }, day)))))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-check\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          type: \"checkbox\",\n          id: \"willRemindOneDayPrior\",\n          name: \"willRemindOneDayPrior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"willRemindOneDayPrior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 45\n          }\n        }, \"\\xA0Remind me one day prior to this birthday\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-check\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          type: \"checkbox\",\n          id: \"willRemindOneWeekPrior\",\n          name: \"willRemindOneWeekPrior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"willRemindOneWeekPrior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 45\n          }\n        }, \"\\xA0Remind me one week prior to this birthday\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: \"form-check\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          type: \"checkbox\",\n          id: \"willRemindCustomTime\",\n          name: \"willRemindCustomTime\",\n          checked: values.willRemindCustomTime,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"willRemindCustomTime\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 45\n          }\n        }, \"\\xA0Remind me at a custom time\"), /*#__PURE__*/React.createElement(DatePicker, {\n          autoComplete: \"off\",\n          selected: values.customDate,\n          showTimeSelect: true,\n          timeIntervals: 15,\n          dateFormat: \"MMMM d, yyyy h:mm aa\",\n          className: \"form-control\",\n          name: \"customDate\",\n          onChange: date => {\n            setFieldValue('customDate', date);\n            setFieldValue('willRemindCustomTime', true);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 45\n          }\n        }), errors.customDate && touched.customDate ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 89\n          }\n        }, errors.customDate) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 153\n          }\n        }, \" \"))), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 37\n          }\n        }, \"Save\"))\n      );\n    }));\n  }\n\n  changeWillRemindCustomTime(event) {\n    this.setState({\n      willRemindCustomTime: event.target.checked\n    });\n  }\n\n  onSubmit(values) {\n    //let {firstName, lastName, birthMonth, birthDay} = values\n    //let birthdayObj = {firstName, lastName, birthMonth, birthDay}\n    console.log(values);\n    /*BirthdayService.addBirthday(birthdayObj)\r\n    .then(\r\n        response => {\r\n            console.log(response)\r\n            this.props.history.push('/')\r\n        }\r\n    )\r\n    .catch(\r\n        error => {\r\n            console.log(error.response)\r\n        }\r\n    )*/\n  }\n\n}\n\nexport default BirthdayPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/BirthdayPage.jsx"],"names":["React","Component","yup","Formik","Form","Field","Button","BirthdayService","DatePicker","BIRTH_MONTH","description","value","BIRTH_DAY","birthdayValidation","object","shape","firstName","string","required","lastName","birthMonth","birthDay","willRemindCustomTime","boolean","customDate","date","when","is","then","nullable","BirthdayPage","constructor","props","state","changeWillRemindCustomTime","bind","onSubmit","render","initialState","willRemindOneDayPrior","willRemindOneWeekPrior","values","errors","touched","setFieldValue","map","month","day","event","setState","target","checked","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport Button from 'react-bootstrap/Button'\r\nimport BirthdayService from \"../../ApiServices/BirthdayService\";\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst BIRTH_MONTH = [\r\n    {description: 'January', value: 1},\r\n    {description: 'February', value: 2},\r\n    {description: 'March', value: 3},\r\n    {description: 'April', value: 4},\r\n    {description: 'May', value: 5},\r\n    {description: 'June', value: 6},\r\n    {description: 'July', value: 7},\r\n    {description: 'August', value: 8},\r\n    {description: 'September', value: 9},\r\n    {description: 'October', value: 10},\r\n    {description: 'November', value: 11},\r\n    {description: 'December', value: 12},\r\n]\r\n\r\nconst BIRTH_DAY = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,  15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\n\r\nconst birthdayValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n    birthMonth: yup.string()\r\n      .required('First Name is required'),\r\n    birthDay: yup.string()\r\n      .required('Last Name is required'),\r\n    willRemindCustomTime: yup.boolean(),\r\n    customDate: yup.date()\r\n        .when(\"willRemindCustomTime\", \r\n            {\r\n                is: true,\r\n                then: yup.date().required(\"Must specify custom date\").nullable()\r\n            }).nullable()\r\n  });\r\n\r\nclass BirthdayPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            willRemindCustomTime: false\r\n        }\r\n\r\n        this.changeWillRemindCustomTime = this.changeWillRemindCustomTime.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        let initialState = {\r\n            firstName: '',\r\n            lastName: '',\r\n            birthMonth: 0,\r\n            birthDay: 0,\r\n            willRemindOneDayPrior: false,\r\n            willRemindOneWeekPrior: false,\r\n            willRemindCustomTime: false,\r\n            customDate: null\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialState}\r\n                    validationSchema={birthdayValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {values, errors, touched, setFieldValue} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n                                                {(errors.lastName && touched.firstName)?(<div className=\"alert alert-danger\">{errors.firstName}</div>):(<div> </div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\"  placeholder=\"Last Name\"/>\r\n                                                {(errors.lastName && touched.lastName)?(<div className=\"alert alert-danger\">{errors.lastName}</div>):(<div></div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Birth Month</label>\r\n                                                <Field as=\"select\" name=\"birthMonth\">\r\n                                                {\r\n                                                    BIRTH_MONTH.map(\r\n                                                        month => <option key={month.value} value={month.value}>{month.description}</option>\r\n                                                    )\r\n                                                }\r\n                                                </Field>\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Birth Day</label>\r\n                                                <Field as=\"select\" name=\"birthDay\">\r\n                                                {\r\n                                                    BIRTH_DAY.map(\r\n                                                        day => <option key={day} value={day}>{day}</option>\r\n                                                    )\r\n                                                }\r\n                                                </Field>\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindOneDayPrior\" name=\"willRemindOneDayPrior\"/>\r\n                                            <label htmlFor=\"willRemindOneDayPrior\">&nbsp;Remind me one day prior to this birthday</label>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindOneWeekPrior\" name=\"willRemindOneWeekPrior\"/>\r\n                                            <label htmlFor=\"willRemindOneWeekPrior\">&nbsp;Remind me one week prior to this birthday</label>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindCustomTime\" name=\"willRemindCustomTime\" checked={values.willRemindCustomTime}/>\r\n                                            <label htmlFor=\"willRemindCustomTime\">&nbsp;Remind me at a custom time</label>\r\n                                            <DatePicker \r\n                                                autoComplete=\"off\"\r\n                                                selected={values.customDate}\r\n                                                showTimeSelect\r\n                                                timeIntervals={15}\r\n                                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                className=\"form-control\"\r\n                                                name=\"customDate\"\r\n                                                onChange={\r\n                                                            date => {\r\n                                                                setFieldValue('customDate', date)\r\n                                                                setFieldValue('willRemindCustomTime', true)\r\n                                                            }\r\n                                                        }\r\n                                            />\r\n                                            {(errors.customDate && touched.customDate)?(<div className=\"alert alert-danger\">{errors.customDate}</div>):(<div> </div>)}\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    changeWillRemindCustomTime(event) {\r\n        this.setState({willRemindCustomTime: event.target.checked})\r\n    }\r\n\r\n    onSubmit(values) {\r\n        //let {firstName, lastName, birthMonth, birthDay} = values\r\n        //let birthdayObj = {firstName, lastName, birthMonth, birthDay}\r\n        console.log(values)\r\n        /*BirthdayService.addBirthday(birthdayObj)\r\n        .then(\r\n            response => {\r\n                console.log(response)\r\n                this.props.history.push('/')\r\n            }\r\n        )\r\n        .catch(\r\n            error => {\r\n                console.log(error.response)\r\n            }\r\n        )*/\r\n    }\r\n}\r\n\r\nexport default BirthdayPage"]},"metadata":{},"sourceType":"module"}