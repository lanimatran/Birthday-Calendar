{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nconst signUpValidation = yup.object().shape({\n  username: yup.string().required('Username is required')\n});\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      middleName: '',\n      suffix: '',\n      email: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    const startDate = new Date();\n    let {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialStates: {\n        username\n      },\n      validationSchema: signUpValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, props => {\n      const {\n        errors,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 60\n        }\n      }, errors.username) : null)), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, \"Submit\"));\n    });\n  }\n\n  onSubmit(values) {\n    alert(\"Test\");\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/SignUpPage.jsx"],"names":["React","Component","Form","Col","Row","Button","ReactDatePicker","yup","Formik","signUpValidation","object","shape","username","string","required","SignUpPage","constructor","props","state","password","confirmPassword","firstName","lastName","middleName","suffix","email","onSubmit","bind","render","startDate","Date","errors","handleSubmit","values","alert"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactDatePicker from 'react-datepicker'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\n\r\nconst signUpValidation = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required')\r\n  });\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            suffix: '',\r\n            email: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const startDate = new Date();\r\n        let {username,password} = this.state\r\n        return (\r\n            <Formik\r\n                initialStates={{username}}\r\n                validationSchema={signUpValidation}\r\n            >\r\n                {\r\n                    (props) => \r\n                    {\r\n                        const {\r\n                        errors,\r\n                        handleSubmit\r\n                        } = props;\r\n                        return (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group as={Row} controlId=\"formUsername\">\r\n                                    <Form.Label column sm={2}>Username</Form.Label>\r\n                                    <Col sm={5}>\r\n                                        <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\"/>\r\n                                        {errors.username ? <div>{errors.username}</div> : null}\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        alert(\"Test\")\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}