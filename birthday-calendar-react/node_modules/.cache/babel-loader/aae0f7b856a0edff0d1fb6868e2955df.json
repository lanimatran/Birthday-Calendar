{"ast":null,"code":"import Axios from \"axios\";\nimport AccountService from \"./AccountService\";\n\nclass ApiUtil {\n  createJwtToken(token) {\n    return 'Bearer ' + token;\n  }\n\n  setupRequestInterceptor(token) {\n    let header = this.createJwtToken(token);\n    Axios.interceptors.request.use(config => {\n      config.headers.authorization = header;\n      return config;\n    });\n  }\n\n  setupResponseInterceptor() {\n    console.log(\"Response Interceptor is being set up\");\n    const interceptor = Axios.interceptors.response.use(response => response, error => {\n      console.log(\"Error has occured\");\n      console.log(error.response);\n      if (error.response.status !== 401) return Promise.reject(error);\n      console.log(\"Error was 401\");\n      Axios.interceptors.response.eject(interceptor);\n      AccountService.refreshToken().then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error.response);\n      });\n    });\n    console.log(\"Response Interceptor set up succesfully. ID of interceptor was \" + interceptor);\n  }\n\n}\n\nexport default new ApiUtil();","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/ApiServices/ApiUtil.js"],"names":["Axios","AccountService","ApiUtil","createJwtToken","token","setupRequestInterceptor","header","interceptors","request","use","config","headers","authorization","setupResponseInterceptor","console","log","interceptor","response","error","status","Promise","reject","eject","refreshToken","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,OAAN,CAAc;AACVC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,YAAYA,KAAnB;AACH;;AAEDC,EAAAA,uBAAuB,CAACD,KAAD,EAAQ;AAC3B,QAAIE,MAAM,GAAG,KAAKH,cAAL,CAAoBC,KAApB,CAAb;AACAJ,IAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BN,MAA/B;AACA,aAAOI,MAAP;AACH,KAJL;AAMH;;AAEDG,EAAAA,wBAAwB,GAAG;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,UAAMC,WAAW,GAAGhB,KAAK,CAACO,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CAChBQ,QAAQ,IAAIA,QADI,EAEhBC,KAAK,IACL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACD,QAAlB;AACA,UAAIC,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC,OAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACnCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAf,MAAAA,KAAK,CAACO,YAAN,CAAmBU,QAAnB,CAA4BK,KAA5B,CAAkCN,WAAlC;AAEAf,MAAAA,cAAc,CAACsB,YAAf,GACCC,IADD,CAEIP,QAAQ,IAAI;AACRH,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACH,OAJL,EAMCQ,KAND,CAOIP,KAAK,IAAI;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACD,QAAlB;AACH,OATL;AAWH,KArBe,CAApB;AAuBAH,IAAAA,OAAO,CAACC,GAAR,CAAY,oEAAoEC,WAAhF;AACH;;AAzCS;;AA4Cd,eAAe,IAAId,OAAJ,EAAf","sourcesContent":["import Axios from \"axios\"\r\nimport AccountService from \"./AccountService\"\r\n\r\nclass ApiUtil {    \r\n    createJwtToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    setupRequestInterceptor(token) {\r\n        let header = this.createJwtToken(token)\r\n        Axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers.authorization = header\r\n                return config\r\n            }\r\n        )\r\n    }\r\n\r\n    setupResponseInterceptor() {\r\n        console.log(\"Response Interceptor is being set up\")\r\n        const interceptor = Axios.interceptors.response.use(\r\n            response => response,\r\n            error =>\r\n            {\r\n                console.log(\"Error has occured\")\r\n                console.log(error.response)\r\n                if (error.response.status !== 401) return Promise.reject(error);\r\n                console.log(\"Error was 401\")\r\n                Axios.interceptors.response.eject(interceptor)\r\n\r\n                AccountService.refreshToken()\r\n                .then(\r\n                    response => {\r\n                        console.log(response)\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        console.log(error.response)\r\n                    }\r\n                )\r\n            }\r\n        )\r\n        console.log(\"Response Interceptor set up succesfully. ID of interceptor was \" + interceptor)\r\n    }\r\n}\r\n\r\nexport default new ApiUtil()"]},"metadata":{},"sourceType":"module"}