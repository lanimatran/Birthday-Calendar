{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\src\\\\Components\\\\Pages\\\\SignUpPage.jsx\";\nimport React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Formik, Form } from 'formik';\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    const startDate = new Date();\n    let state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      middleName: '',\n      suffix: '',\n      email: ''\n    };\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialStates: state,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, props => {\n      const {\n        errors\n      } = props;\n      return /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationFormik01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }\n      }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"firstName\",\n        value: values.firstName,\n        onChange: handleChange,\n        isValid: touched.firstName && !errors.firstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationFormik02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"lastName\",\n        value: values.lastName,\n        onChange: handleChange,\n        isValid: touched.lastName && !errors.lastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationFormikUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }, \"@\")), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        name: \"username\",\n        value: values.username,\n        onChange: handleChange,\n        isInvalid: !!errors.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }, errors.username)))), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"validationFormik03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"City\",\n        name: \"city\",\n        value: values.city,\n        onChange: handleChange,\n        isInvalid: !!errors.city,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, errors.city)), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationFormik04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"State\",\n        name: \"state\",\n        value: values.state,\n        onChange: handleChange,\n        isInvalid: !!errors.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, errors.state)), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationFormik05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Zip\",\n        name: \"zip\",\n        value: values.zip,\n        onChange: handleChange,\n        isInvalid: !!errors.zip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, errors.zip))), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        required: true,\n        name: \"terms\",\n        label: \"Agree to terms and conditions\",\n        onChange: handleChange,\n        isInvalid: !!errors.terms,\n        feedback: errors.terms,\n        id: \"validationFormik0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }, \"Submit form\"));\n    });\n  }\n\n  onSubmit(values) {\n    alert(\"Test\");\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Components/Pages/SignUpPage.jsx"],"names":["React","Component","Col","Row","Button","ReactDatePicker","Formik","Form","SignUpPage","constructor","props","onSubmit","bind","render","startDate","Date","state","username","password","confirmPassword","firstName","lastName","middleName","suffix","email","errors","handleSubmit","values","handleChange","touched","city","zip","terms","alert"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactDatePicker from 'react-datepicker'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Formik, Form } from 'formik'\r\n\r\nclass SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const startDate = new Date();\r\n        let state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            suffix: '',\r\n            email: '',\r\n        }\r\n        return (\r\n            <Formik\r\n                initialStates={state}\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                {\r\n                    (props) => \r\n                    {\r\n                        const {\r\n                        errors\r\n                        } = props;\r\n                        return (\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                                    <Form.Label>First name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        value={values.firstName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.firstName && !errors.firstName}\r\n                                    />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                                    <Form.Label>Last name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        value={values.lastName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.lastName && !errors.lastName}\r\n                                    />\r\n\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Prepend>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                        aria-describedby=\"inputGroupPrepend\"\r\n                                        name=\"username\"\r\n                                        value={values.username}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.username}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"City\"\r\n                                        name=\"city\"\r\n                                        value={values.city}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.city}\r\n                                    />\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.city}\r\n                                    </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"State\"\r\n                                        name=\"state\"\r\n                                        value={values.state}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.state}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.state}\r\n                                    </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Zip\"\r\n                                        name=\"zip\"\r\n                                        value={values.zip}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.zip}\r\n                                    />\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.zip}\r\n                                    </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Group>\r\n                                    <Form.Check\r\n                                    required\r\n                                    name=\"terms\"\r\n                                    label=\"Agree to terms and conditions\"\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.terms}\r\n                                    feedback={errors.terms}\r\n                                    id=\"validationFormik0\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\">Submit form</Button>\r\n                                </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>            \r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        alert(\"Test\")\r\n    }\r\n}\r\n\r\nexport default SignUpPage"]},"metadata":{},"sourceType":"module"}