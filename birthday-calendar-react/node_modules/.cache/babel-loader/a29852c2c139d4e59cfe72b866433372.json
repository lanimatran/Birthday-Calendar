{"ast":null,"code":"import _classCallCheck from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Projects\\\\Birthday Calendar\\\\birthday-calendar-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import*as yup from'yup';import{Formik,Form,Field}from'formik';import Button from'react-bootstrap/Button';import BirthdayService from\"../ApiServices/BirthdayService\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";var BIRTH_MONTH=[{description:'January',value:1},{description:'February',value:2},{description:'March',value:3},{description:'April',value:4},{description:'May',value:5},{description:'June',value:6},{description:'July',value:7},{description:'August',value:8},{description:'September',value:9},{description:'October',value:10},{description:'November',value:11},{description:'December',value:12}];var BIRTH_DAY=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];var birthdayValidation=yup.object().shape({firstName:yup.string().required('First Name is required'),lastName:yup.string().required('Last Name is required'),birthMonth:yup.string().required('First Name is required'),birthDay:yup.string().required('Last Name is required'),willRemindCustomTime:yup.boolean(),customReminder:yup.date().when(\"willRemindCustomTime\",{is:true,then:yup.date().required(\"Must specify custom date\").nullable()}).nullable()});var BirthdayPage=/*#__PURE__*/function(_Component){_inherits(BirthdayPage,_Component);var _super=_createSuper(BirthdayPage);function BirthdayPage(props){var _this;_classCallCheck(this,BirthdayPage);_this=_super.call(this,props);_this.state={firstName:'',lastName:'',birthMonth:1,birthDay:1,willRemindOneDayPrior:false,willRemindOneWeekPrior:false,willRemindCustomTime:false,customReminder:null};_this.changeWillRemindCustomTime=_this.changeWillRemindCustomTime.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.cancel=_this.cancel.bind(_assertThisInitialized(_this));return _this;}_createClass(BirthdayPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var id=this.props.match.params.id;if(id>0){BirthdayService.getBirthday(id).then(function(response){_this2.setState({firstName:response.data.firstName,lastName:response.data.lastName,birthMonth:response.data.birthMonth,birthDay:response.data.birthDay,willRemindOneDayPrior:response.data.willRemindOneDayPrior,willRemindOneWeekPrior:response.data.willRemindOneWeekPrior,willRemindCustomTime:response.data.willRemindCustomTime,customReminder:response.data.customReminder?new Date(response.data.customReminder):null});}).catch(function(error){console.log(error);});}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Formik,{initialValues:this.state,validationSchema:birthdayValidation,onSubmit:this.onSubmit,validateOnChange:false,validateOnBlur:true,enableReinitialize:true},function(props){var values=props.values,errors=props.errors,touched=props.touched,setFieldValue=props.setFieldValue;return/*#__PURE__*/ (// Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\nReact.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"First Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"firstName\",placeholder:\"First Name\"}),errors.lastName&&touched.firstName&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.firstName))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Last Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"lastName\",placeholder:\"Last Name\"}),errors.lastName&&touched.lastName&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.lastName)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Birth Month\"),/*#__PURE__*/React.createElement(Field,{as:\"select\",name:\"birthMonth\"},BIRTH_MONTH.map(function(month){return/*#__PURE__*/React.createElement(\"option\",{key:month.value,value:month.value},month.description);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Birth Day\"),/*#__PURE__*/React.createElement(Field,{as:\"select\",name:\"birthDay\"},BIRTH_DAY.map(function(day){return/*#__PURE__*/React.createElement(\"option\",{key:day,value:day},day);}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-check\"},/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",id:\"willRemindOneDayPrior\",name:\"willRemindOneDayPrior\"}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"willRemindOneDayPrior\"},\"\\xA0Remind me one day prior to this birthday\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-check\"},/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",id:\"willRemindOneWeekPrior\",name:\"willRemindOneWeekPrior\"}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"willRemindOneWeekPrior\"},\"\\xA0Remind me one week prior to this birthday\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-check\"},/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",id:\"willRemindCustomTime\",name:\"willRemindCustomTime\",checked:values.willRemindCustomTime}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"willRemindCustomTime\"},\"\\xA0Remind me at a custom time\"),/*#__PURE__*/React.createElement(DatePicker,{autoComplete:\"off\",selected:values.customReminder,showTimeSelect:true,timeIntervals:15,dateFormat:\"MMMM d, yyyy h:mm aa\",className:\"form-control\",name:\"customReminder\",onChange:function onChange(date){setFieldValue('customReminder',date);if(date)setFieldValue('willRemindCustomTime',true);else{setFieldValue('willRemindCustomTime',false);}}}),errors.customReminder&&touched.customReminder?/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},errors.customReminder):/*#__PURE__*/React.createElement(\"div\",null,\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(Button,{variant:\"success\",type:\"submit\"},\"Save\"),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:_this3.cancel},\"Cancel\"))));}));}},{key:\"changeWillRemindCustomTime\",value:function changeWillRemindCustomTime(event){this.setState({willRemindCustomTime:event.target.checked});}},{key:\"onSubmit\",value:function onSubmit(values){var _this4=this;var ID=this.props.match.params.id;if(ID>0){BirthdayService.updateBirthday(ID,values).then(function(response){console.log(response);_this4.props.history.push('/');}).catch(function(error){console.log(error);});}else{console.log(\"I got here\");BirthdayService.addBirthday(values).then(function(response){console.log(response);_this4.props.history.push('/');}).catch(function(error){console.log(error.response);});}}},{key:\"cancel\",value:function cancel(){this.props.history.push(\"/\");}}]);return BirthdayPage;}(Component);export default BirthdayPage;","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Pages/BirthdayPage.jsx"],"names":["React","Component","yup","Formik","Form","Field","Button","BirthdayService","DatePicker","BIRTH_MONTH","description","value","BIRTH_DAY","birthdayValidation","object","shape","firstName","string","required","lastName","birthMonth","birthDay","willRemindCustomTime","boolean","customReminder","date","when","is","then","nullable","BirthdayPage","props","state","willRemindOneDayPrior","willRemindOneWeekPrior","changeWillRemindCustomTime","bind","onSubmit","cancel","id","match","params","getBirthday","response","setState","data","Date","catch","error","console","log","values","errors","touched","setFieldValue","map","month","day","event","target","checked","ID","updateBirthday","history","push","addBirthday"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as yup from 'yup'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport Button from 'react-bootstrap/Button'\r\nimport BirthdayService from \"../ApiServices/BirthdayService\";\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst BIRTH_MONTH = [\r\n    {description: 'January', value: 1},\r\n    {description: 'February', value: 2},\r\n    {description: 'March', value: 3},\r\n    {description: 'April', value: 4},\r\n    {description: 'May', value: 5},\r\n    {description: 'June', value: 6},\r\n    {description: 'July', value: 7},\r\n    {description: 'August', value: 8},\r\n    {description: 'September', value: 9},\r\n    {description: 'October', value: 10},\r\n    {description: 'November', value: 11},\r\n    {description: 'December', value: 12},\r\n]\r\n\r\nconst BIRTH_DAY = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,  15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\n\r\nconst birthdayValidation = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('First Name is required'),\r\n    lastName: yup.string()\r\n      .required('Last Name is required'),\r\n    birthMonth: yup.string()\r\n      .required('First Name is required'),\r\n    birthDay: yup.string()\r\n      .required('Last Name is required'),\r\n    willRemindCustomTime: yup.boolean(),\r\n    customReminder: yup.date()\r\n        .when(\"willRemindCustomTime\", \r\n            {\r\n                is: true,\r\n                then: yup.date().required(\"Must specify custom date\").nullable()\r\n            }).nullable()\r\n  });\r\n\r\nclass BirthdayPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            birthMonth: 1,\r\n            birthDay: 1,\r\n            willRemindOneDayPrior: false,\r\n            willRemindOneWeekPrior: false,\r\n            willRemindCustomTime: false,\r\n            customReminder: null\r\n        }\r\n\r\n        this.changeWillRemindCustomTime = this.changeWillRemindCustomTime.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        var id = this.props.match.params.id\r\n        if (id > 0) {\r\n            BirthdayService.getBirthday(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({\r\n                        firstName: response.data.firstName,\r\n                        lastName: response.data.lastName,\r\n                        birthMonth: response.data.birthMonth,\r\n                        birthDay: response.data.birthDay,\r\n                        willRemindOneDayPrior: response.data.willRemindOneDayPrior,\r\n                        willRemindOneWeekPrior: response.data.willRemindOneWeekPrior,\r\n                        willRemindCustomTime: response.data.willRemindCustomTime,\r\n                        customReminder: (response.data.customReminder)?(new Date(response.data.customReminder)):null\r\n                    })\r\n                }\r\n            )\r\n            .catch (\r\n                error => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={this.state}\r\n                    validationSchema={birthdayValidation}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={true}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        (props) =>\r\n                        {\r\n                            let {values, errors, touched, setFieldValue} = props\r\n                            return (\r\n                                // Formik's <Form> is not compatible with React Bootstrap's <Form>. The entire section is therefore written using classic tags\r\n                                <Form>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>First Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n                                                {(errors.lastName && touched.firstName)&&(<div className=\"alert alert-danger\">{errors.firstName}</div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Last Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"lastName\"  placeholder=\"Last Name\"/>\r\n                                                {(errors.lastName && touched.lastName)&&(<div className=\"alert alert-danger\">{errors.lastName}</div>)}\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Birth Month</label>\r\n                                                <Field as=\"select\" name=\"birthMonth\">\r\n                                                {\r\n                                                    BIRTH_MONTH.map(\r\n                                                        month => <option key={month.value} value={month.value}>{month.description}</option>\r\n                                                    )\r\n                                                }\r\n                                                </Field>\r\n                                            </fieldset>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Birth Day</label>\r\n                                                <Field as=\"select\" name=\"birthDay\">\r\n                                                {\r\n                                                    BIRTH_DAY.map(\r\n                                                        day => <option key={day} value={day}>{day}</option>\r\n                                                    )\r\n                                                }\r\n                                                </Field>\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindOneDayPrior\" name=\"willRemindOneDayPrior\"/>\r\n                                            <label htmlFor=\"willRemindOneDayPrior\">&nbsp;Remind me one day prior to this birthday</label>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindOneWeekPrior\" name=\"willRemindOneWeekPrior\"/>\r\n                                            <label htmlFor=\"willRemindOneWeekPrior\">&nbsp;Remind me one week prior to this birthday</label>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <fieldset className=\"form-check\">\r\n                                            <Field type=\"checkbox\" id=\"willRemindCustomTime\" name=\"willRemindCustomTime\" checked={values.willRemindCustomTime}/>\r\n                                            <label htmlFor=\"willRemindCustomTime\">&nbsp;Remind me at a custom time</label>\r\n                                            <DatePicker \r\n                                                autoComplete=\"off\"\r\n                                                selected={values.customReminder}\r\n                                                showTimeSelect\r\n                                                timeIntervals={15}\r\n                                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                className=\"form-control\"\r\n                                                name=\"customReminder\"\r\n                                                onChange={\r\n                                                            date => {\r\n                                                                setFieldValue('customReminder', date)\r\n                                                                if (date) setFieldValue('willRemindCustomTime', true)\r\n                                                                else{\r\n                                                                    setFieldValue('willRemindCustomTime', false)\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                            />\r\n                                            {(errors.customReminder && touched.customReminder)?(<div className=\"alert alert-danger\">{errors.customReminder}</div>):(<div> </div>)}\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <Button variant=\"success\" type=\"submit\">Save</Button>\r\n                                        <Button variant=\"primary\" onClick={this.cancel}>Cancel</Button>\r\n                                    </div>                                    \r\n                                </Form>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    changeWillRemindCustomTime(event) {\r\n        this.setState({willRemindCustomTime: event.target.checked})\r\n    }\r\n\r\n    onSubmit(values) {\r\n        var ID = this.props.match.params.id\r\n        if (ID > 0) {\r\n            BirthdayService.updateBirthday(ID, values)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.props.history.push('/')\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            console.log(\"I got here\")\r\n            BirthdayService.addBirthday(values)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.props.history.push('/')\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    console.log(error.response)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push(`/`)\r\n    }\r\n}\r\n\r\nexport default BirthdayPage"]},"metadata":{},"sourceType":"module"}