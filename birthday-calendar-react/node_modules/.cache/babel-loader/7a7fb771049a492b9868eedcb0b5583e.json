{"ast":null,"code":"import { SERVER_CONNECTION_ERROR_MESSAGE, UNKNOWN_ERROR_ERROR_MESSAGE, SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY } from \"./GlobalConstants\";\n\nclass Utility {\n  getFullNameFromComponents(firstName, lastName, middleName, suffix) {\n    var fullName = firstName + ' ' + lastName;\n    fullName = middleName && middleName !== '' ? fullName + ', ' + middleName : fullName;\n    fullName = suffix && suffix !== '' ? fullName + ' ' + suffix : fullName;\n    return fullName;\n  }\n\n  getBirthdayFromComponents(birthmonth, birthday) {\n    return birthmonth + '/' + birthday;\n  }\n\n  defaultApiErrorHandling(error, object) {\n    if (error.response) {\n      object.setState({\n        serverErrorMessage: error.response.data.message\n      });\n    } else if (error.request) {\n      object.setState({\n        serverErrorMessage: SERVER_CONNECTION_ERROR_MESSAGE\n      });\n    } else {\n      object.setState({\n        serverErrorMessage: UNKNOWN_ERROR_ERROR_MESSAGE\n      });\n    }\n  }\n\n  isUserAuthenticated() {\n    if (sessionStorage.getItem(SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY)) return true;\n    return false;\n  }\n\n  saveToken(token, willSaveTokenToLocalStorage) {\n    if (willSaveTokenToLocalStorage) localStorage.setItem(LOCAL_STORAGE_AUTHENTICATION_TOKEN_KEY, token);\n    sessionStorage.setItem(SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY, token);\n    authenticationChangeHandler();\n  }\n\n  removeToken(authenticationChangeHandler) {\n    sessionStorage.clear();\n    localStorage.clear();\n    authenticationChangeHandler();\n  }\n\n}\n\nexport default new Utility();","map":{"version":3,"sources":["D:/Projects/Birthday Calendar/birthday-calendar-react/src/Utility/Utility.js"],"names":["SERVER_CONNECTION_ERROR_MESSAGE","UNKNOWN_ERROR_ERROR_MESSAGE","SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY","Utility","getFullNameFromComponents","firstName","lastName","middleName","suffix","fullName","getBirthdayFromComponents","birthmonth","birthday","defaultApiErrorHandling","error","object","response","setState","serverErrorMessage","data","message","request","isUserAuthenticated","sessionStorage","getItem","saveToken","token","willSaveTokenToLocalStorage","localStorage","setItem","LOCAL_STORAGE_AUTHENTICATION_TOKEN_KEY","authenticationChangeHandler","removeToken","clear"],"mappings":"AAAA,SAASA,+BAAT,EAA0CC,2BAA1C,EAAuEC,wCAAvE,QAAuH,mBAAvH;;AAEA,MAAMC,OAAN,CAAc;AACVC,EAAAA,yBAAyB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0C;AAC/D,QAAIC,QAAQ,GAAGJ,SAAS,GAAG,GAAZ,GAAkBC,QAAjC;AACAG,IAAAA,QAAQ,GAAIF,UAAU,IAAIA,UAAU,KAAK,EAA9B,GAAmCE,QAAQ,GAAG,IAAX,GAAkBF,UAArD,GAAiEE,QAA5E;AACAA,IAAAA,QAAQ,GAAID,MAAM,IAAIA,MAAM,KAAK,EAAtB,GAA2BC,QAAQ,GAAG,GAAX,GAAiBD,MAA5C,GAAoDC,QAA/D;AACA,WAAOA,QAAP;AACH;;AAEDC,EAAAA,yBAAyB,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC5C,WAAOD,UAAU,GAAG,GAAb,GAAmBC,QAA1B;AACH;;AAEDC,EAAAA,uBAAuB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnC,QAAID,KAAK,CAACE,QAAV,EAAoB;AAChBD,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAEJ,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC;AAAzC,OAAhB;AACH,KAFD,MAEO,IAAIN,KAAK,CAACO,OAAV,EAAmB;AACtBN,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAElB;AAArB,OAAhB;AACH,KAFM,MAEA;AACHe,MAAAA,MAAM,CAACE,QAAP,CAAgB;AAACC,QAAAA,kBAAkB,EAAEjB;AAArB,OAAhB;AACH;AACJ;;AAEDqB,EAAAA,mBAAmB,GAAG;AAClB,QAAIC,cAAc,CAACC,OAAf,CAAuBtB,wCAAvB,CAAJ,EAAsE,OAAO,IAAP;AACtE,WAAO,KAAP;AACH;;AAEDuB,EAAAA,SAAS,CAACC,KAAD,EAAQC,2BAAR,EAAqC;AAC1C,QAAIA,2BAAJ,EAAkCC,YAAY,CAACC,OAAb,CAAqBC,sCAArB,EAA6DJ,KAA7D;AAClCH,IAAAA,cAAc,CAACM,OAAf,CAAuB3B,wCAAvB,EAAiEwB,KAAjE;AACAK,IAAAA,2BAA2B;AAC9B;;AAEDC,EAAAA,WAAW,CAACD,2BAAD,EAA8B;AACrCR,IAAAA,cAAc,CAACU,KAAf;AACAL,IAAAA,YAAY,CAACK,KAAb;AACAF,IAAAA,2BAA2B;AAC9B;;AArCS;;AAwCd,eAAe,IAAI5B,OAAJ,EAAf","sourcesContent":["import { SERVER_CONNECTION_ERROR_MESSAGE, UNKNOWN_ERROR_ERROR_MESSAGE, SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY } from \"./GlobalConstants\"\r\n\r\nclass Utility {\r\n    getFullNameFromComponents(firstName, lastName, middleName, suffix) {\r\n        var fullName = firstName + ' ' + lastName\r\n        fullName = (middleName && middleName !== '')?(fullName + ', ' + middleName):fullName \r\n        fullName = (suffix && suffix !== '')?(fullName + ' ' + suffix):fullName\r\n        return fullName\r\n    }\r\n\r\n    getBirthdayFromComponents(birthmonth, birthday) {\r\n        return birthmonth + '/' + birthday\r\n    }\r\n\r\n    defaultApiErrorHandling(error, object) {\r\n        if (error.response) {\r\n            object.setState({serverErrorMessage: error.response.data.message})\r\n        } else if (error.request) {\r\n            object.setState({serverErrorMessage: SERVER_CONNECTION_ERROR_MESSAGE})\r\n        } else {\r\n            object.setState({serverErrorMessage: UNKNOWN_ERROR_ERROR_MESSAGE})\r\n        }\r\n    }\r\n\r\n    isUserAuthenticated() {\r\n        if (sessionStorage.getItem(SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY)) return true;\r\n        return false;\r\n    }\r\n\r\n    saveToken(token, willSaveTokenToLocalStorage) {\r\n        if (willSaveTokenToLocalStorage)  localStorage.setItem(LOCAL_STORAGE_AUTHENTICATION_TOKEN_KEY, token)\r\n        sessionStorage.setItem(SESSION_STORAGE_AUTHENTICATION_TOKEN_KEY, token)\r\n        authenticationChangeHandler()\r\n    }\r\n\r\n    removeToken(authenticationChangeHandler) {\r\n        sessionStorage.clear()\r\n        localStorage.clear()\r\n        authenticationChangeHandler()\r\n    }\r\n}\r\n\r\nexport default new Utility()"]},"metadata":{},"sourceType":"module"}